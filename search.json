[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "\n            RI Digitais\n        ",
    "section": "",
    "text": "Um apanhado dos recursos digitais de pesquisa em Relações Internacionais\n        \n        \n            PUC Minas Poços de Caldas • Maio 2023Curso de Relações Internacionais da Pontifícia Universidade Católica de Minas Gerais"
  },
  {
    "objectID": "index.html#footnotes",
    "href": "index.html#footnotes",
    "title": "\n            RI Digitais\n        ",
    "section": "Footnotes",
    "text": "Footnotes\n\n\n’Χρώμεθα γὰρ πολιτείᾳ οὐ ζηλούσῃ τοὺς τῶν πέλας νόμους, παράδειγμα δὲ μᾶλλον αὐτοὶ ὄντες τισὶν ἢ μιμούμενοι ἑτέρους. καὶ ὄνομα μὲν διὰ τὸ μὴ ἐς ὀλίγους ἀλλ’ ἐς πλείονας οἰκεῖν δημοκρατία κέκληται·↩︎\nTrecho da oração fúnebre proferida por Péricles, em 431 a.C., por ocasião do fim do primeiro ano da guerra do Peloponeso, recontada pelo historiador ateniense Tucídides. Péricles foi um eminente político que liderou a democracia ateniense em seu período áureo e que proferiu este discurso com o propósito de elevar a moral da população, exaltando os valores do modelo institucional ateniense em detrimento ao modelo militarista e oligárquico espartano.↩︎"
  },
  {
    "objectID": "md/A/index.html",
    "href": "md/A/index.html",
    "title": "Coleta e Preparação do material de pesquisa",
    "section": "",
    "text": "Toda pesquisa em ciências humanas inevitavelmente envolve três etapas, de pesquisa: preparação, execução e divulgação.\n\n\n\n\n\ngraph TD\n    A(Coleta de dados e referências bibliográficas) --&gt; B(Análise das referências e estruturação dos dados)\n    B --&gt; C(Preparação de um texto ou relatório para publicação)\n    C --&gt; A\n\n\n\n\n\n\nNa primeira fase, o pesquisador deve buscar por fontes primárias e secundárias, bem como por dados que possam ser utilizados para a análise do objeto de estudo. Em linhas gerais, as fontes primárias são os documentos, dados e materiais que constituem o objeto de estudo em si, enquanto as fontes secundárias são as referências bibliográficas que tratam do objeto de estudo.\n\nRepositórios de referências\n\nPara encontrar referências bibliográficas propriamente, confira o Internet Archive Scholar, Research Rabbit, o Google Scholar, Semantic Scholar, CrossRef, ou o JSTOR. Pesquisadores de diversas áreas também compartilham com frequência sua produção acadêmica em redes sociais, como Academia.edu, ResearchGate, ou com o Mendeley. Em alguns casos, é possível encontrar bibliografias anotadas e comentadas por acadêmicos na forma de publicações (e.g. Oxford Bibliographies in International Relations) ou nos sites pessoais de pesquisadoras.\n\nRepositórios de documentos\nO Internet Archive hospeda conteúdo em domínio público e torna possível retirar livros digitalmente em bibliotecas estrangeiras. Além disso, ele hospeda a Wayback Machine, responsável por fazer snapshots periódicos de uma grande parte do conteúdo da internet. Este recurso é importante para permitir referências estáveis em trabalhos acadêmicos. Nesta categoria temos ainda o Arquivo Nacional, a Europeana, a e Biblioteca Digital Mundial com coleções de museus, bibliotecas e arquivos de todo o mundo.\n\n\n\n\n\n\nTip\n\n\n\nNão deixe de explorar o Internet Archive e os repositórios públicos de material digitalizado. Trata-se de uma fonte inestimável para qualquer pesquisa em humanidades que lida com documentos históricos.\n\n\n\n\nRepositórios de código\nPara encontrar códigos de programas, consulte o Github, o Gitlab, ou o Bitbucket. O Github é o maior repositório de código aberto do mundo, e é uma excelente fonte para encontrar códigos de programas. O Gitlab e o Bitbucket são uma alternativas ao Github, que também permitem hospedar códigos de programas. Aprender a navegar e utilizar o Github é uma habilidade importante para qualquer pesquisador, e pode ser aprendida por meio de tutoriais como este.\n\n\nRepositórios de dados\nPara acessar bancos de dados em domínio público, consulte o Our World in Data, o Gapminder, o World Bank Open Data, o UNdata, o World Bank DataBank, ou o Portal Brasileiro de Dados Abertos. Talvez o melhor repositório de dados seja o Google Dataset Search, que permite buscar por conjuntos de dados em diversos repositórios. Apesar de não ser um repositório de dados propriamente, o Github frequentemente hospeda conjuntos de dados, e é uma boa fonte para encontrar scripts de raspagem de dados.\n\n\nColeta de dados\nA coleta de dados é uma tarefa que pode ser realizada de diversas formas. Dados podem ser coletados por meio de entrevistas, observação participante, ou por meio de questionários. Em outros casos, os dados podem ser coletados por meio de raspagem de dados de sites, ou por meio de APIs. Para este tipo de tarefa, o pesquisador pode utilizar ferramentas como o Import.io, o Octoparse, ou o ParseHub, ou scripts em Python, R, que podem ser escritos com o Jupyter Notebooks, com R Markdown, ou outra linguagem de programação.1 Em outros casos, os dados podem ser coletados por meio de experimentos, ou por meio de simulações computacionais.1 Para aprender mais, consulte, em particular, Python Humanities e Programming Historian.\nConsulte ainda:\n\nBiblioteca Digital Brasileira de Teses e Dissertações: PUC MG, PUC SP, PUC Rio, PUC RS, UFMG, USP, Unicamp, Unesp, UFRJ, UFRGS, UFSC, UFPE, UFBA, UFRN, UERJ, UFC, UFSM, UFPR, UFPB, UFG, UFS, UFPA, UFSCar, UFCG, UFLA, UFV, UFPI, UFMS, UFAL, UFGD\nOpen Access, Open Access Journals, Open Access Theses and Dissertations, Open Access Books, Open Access Repositories\nInternet Archive, Internet Archive Wayback Machine, Internet Archive Scholar\nPortal Brasileiro de Dados Abertos"
  },
  {
    "objectID": "md/B/index.html",
    "href": "md/B/index.html",
    "title": "Análise do material de pesquisa",
    "section": "",
    "text": "Imagens de David B. Clear.\n\n\n\nA expressão “Caixa fichário” é uma tradução de Zettelkasten. Literalmente, ela significa apenas uma caixa onde são guardadas fichas. Esse é também o nome de um método de trabalho desenvolvido pelo sociólogo Niklas Luhmann e que hoje é mais conhecido e utilizado no meio acadêmico de língua alemã. Apesar de soar como um método de organização ou armazenamento, esse certamente não é o caso. Antes de mais nada, a caixa-fichário é uma interlocutora em um diálogo. Mas como esse diálogo é construído?\n\n\n\nNormalmente as teses e ideias que encontramos na bibliografia secundária, e mesmo em nossas anotações, se encontram condensadas e articuladas em um texto ou fio argumentativo. Para criar novas associações e forjar novas relações entre conceitos, o primeiro passo é praticar a divisão.\n\n\n\nCom as ideias atomizadas em fichas, e removidas do seu contexto de origem, há uma ampla margem para a construção de diferentes formas de vinculação com outras ideias. Dizendo de outro modo, podemos praticar a reunião de diferentes modos: alguns diretos outros indiretos.\nUm primeiro modo possível, e indireto, ao qual estamos acostumados, é por meio do uso de pastas. Nesse modelo, baseado na experiência concreta de organização em arquivos, cada ficha pertence a uma única caixa (ou sequência, como veremos). É um modo muito útil e tradicional de manter as coisas organizadas.\n\n\n\nUm segundo modo possível de associação, também indireto, desconsidera a limitação física e torna possível que uma ficha participe de mais de um agrupamento. Isso é feito por meio de etiquetas, #tags, que podem formar diversos grupos sobrepostos para servir a diferentes propósitos.\n\n\n\nUm terceiro modo, por fim, são os links diretos entre ideias dentro do nosso sistema. Novamente, aqui não há limites para o número de ligações possíveis entre as fichas.\n\n\n\nMas é claro que para que essas ligações sejam possíveis, é preciso que haja um sistema de endereçamento das fichas que torne possível referencia-las e incluí-las em diferentes etiquetas ou ligações diretas. Dizendo de outro modo, tudo dentro do sistema precisa de um endereço fixo que não sofrerá nenhum tipo de alteração com o decorrer do tempo de modo a não romper qualquer ligação existente."
  },
  {
    "objectID": "md/B/index.html#o-método-zettelkasten",
    "href": "md/B/index.html#o-método-zettelkasten",
    "title": "Análise do material de pesquisa",
    "section": "",
    "text": "Imagens de David B. Clear.\n\n\n\nA expressão “Caixa fichário” é uma tradução de Zettelkasten. Literalmente, ela significa apenas uma caixa onde são guardadas fichas. Esse é também o nome de um método de trabalho desenvolvido pelo sociólogo Niklas Luhmann e que hoje é mais conhecido e utilizado no meio acadêmico de língua alemã. Apesar de soar como um método de organização ou armazenamento, esse certamente não é o caso. Antes de mais nada, a caixa-fichário é uma interlocutora em um diálogo. Mas como esse diálogo é construído?\n\n\n\nNormalmente as teses e ideias que encontramos na bibliografia secundária, e mesmo em nossas anotações, se encontram condensadas e articuladas em um texto ou fio argumentativo. Para criar novas associações e forjar novas relações entre conceitos, o primeiro passo é praticar a divisão.\n\n\n\nCom as ideias atomizadas em fichas, e removidas do seu contexto de origem, há uma ampla margem para a construção de diferentes formas de vinculação com outras ideias. Dizendo de outro modo, podemos praticar a reunião de diferentes modos: alguns diretos outros indiretos.\nUm primeiro modo possível, e indireto, ao qual estamos acostumados, é por meio do uso de pastas. Nesse modelo, baseado na experiência concreta de organização em arquivos, cada ficha pertence a uma única caixa (ou sequência, como veremos). É um modo muito útil e tradicional de manter as coisas organizadas.\n\n\n\nUm segundo modo possível de associação, também indireto, desconsidera a limitação física e torna possível que uma ficha participe de mais de um agrupamento. Isso é feito por meio de etiquetas, #tags, que podem formar diversos grupos sobrepostos para servir a diferentes propósitos.\n\n\n\nUm terceiro modo, por fim, são os links diretos entre ideias dentro do nosso sistema. Novamente, aqui não há limites para o número de ligações possíveis entre as fichas.\n\n\n\nMas é claro que para que essas ligações sejam possíveis, é preciso que haja um sistema de endereçamento das fichas que torne possível referencia-las e incluí-las em diferentes etiquetas ou ligações diretas. Dizendo de outro modo, tudo dentro do sistema precisa de um endereço fixo que não sofrerá nenhum tipo de alteração com o decorrer do tempo de modo a não romper qualquer ligação existente."
  },
  {
    "objectID": "md/B/index.html#pastas-etiquetas-e-links-na-caixa-fichário",
    "href": "md/B/index.html#pastas-etiquetas-e-links-na-caixa-fichário",
    "title": "Análise do material de pesquisa",
    "section": "Pastas, etiquetas e links na caixa fichário",
    "text": "Pastas, etiquetas e links na caixa fichário\nNesse método de trabalho baseado em anotações em fichas concretas, como era o caso do Zettelkasten do Luhmann, a solução consiste em numerar as notas à medida em que são adicionadas à caixa fichário.\n\n\n\nSempre que possível, uma nota será incluída atrás de uma outra nota existente com a qual dialogue. Se já houver uma outra nota atrás que continue a sequência, sem problemas, ela pode ser adicionada como um subitem na numeração (1, 2, 2a, 3, 4, 4a, 4b, 5). Quando não for possível, por ela não dialogar com nenhuma outra nota existente, ela entra no fim da sequência.\n\n\n\nHá dois detalhes relevantes sobre esse modo de organização.\n\nEle baseia-se no modelo de ligação indireto das pastas, já que uma nota essencialmente serve como pasta (ou início da sequência de subitens) para as demais.\nCom a possibilidade de desdobrar cada item existente, é como se pudéssemos manter diversos diálogos em paralelo. Cada ficha será sempre o início de um fio que pode se desdobrar indefinidamente.\n\n\n\n\nOs dois outros modos de associação entre fichas descritos anteriormente aparecem no sistema do seguinte modo:\n\nEtiquetas são atribuídas às fichas anotando-as na própria ficha e registrando em uma ficha adicional o endereço de todas as fichas com aquela etiqueta.\nLigações diretas são, similarmente, anotadas no corpo de cada ficha. Eventualmente uma nova ficha pode ser necessária para justificar, esclarecer ou desdobrar a razão daquele link direto."
  },
  {
    "objectID": "md/B/index.html#dialogando",
    "href": "md/B/index.html#dialogando",
    "title": "Análise do material de pesquisa",
    "section": "Dialogando",
    "text": "Dialogando\nPela descrição e pelas imagens, fica claro como o método da caixa fichário serve para criar novas redes neurais com um aspecto profundamente orgânico: os fios são potencialmente infindáveis e de tamanhos variados. Certos agrupamentos são coesos, outros caóticos e para várias fichas talvez ainda não haja mais de um agrupamento possível. Todas essas característica são, na visão de Luhmann, elementos da individualidade da nossa caixa fichário como parceira de conversa. Não há uma simples aplicação de critérios e categorias exógenas para estruturar a caixa; ao invés, todo e qualquer princípio de organização deve emergir a partir das necessidades impostas pelo próprio conteúdo.\nA esse respeito é importante observar que Luhmann nunca modificava a posição ou o endereço de uma ficha. Sempre que uma nova estrutura emergia do conteúdo, dando origem a novos critérios de organização ou ordenamento, ele produzia uma nova ficha indexando os endereços e registrando a racionalidade por trás daquela relação. A ideia por trás desse procedimento é a de que todas estruturas emergentes são temporárias e sujeitas a modificações, de modo que não faria sentido reorganizar todo o conteúdo da caixa fichário e permanecer sempre preso àquela estrutura. A organização em pastas é, portanto, uma forma de organização mais ou menos fixa (exceto pela possibilidade de adicionar novas fichas).\nÉ com o passar dos anos, e depois da aquisição de uma massa crítica, que ela passa a ser verdadeiramente útil. Cada vez que buscarmos junto a ela elementos para explorar uma determinada questão, teremos assegurada uma possibilidade de um novo diálogo. À medida que o diálogo avança, novas perspectivas emergem e com elas novos princípios com capacidade de explicar e ordenar elementos previamente dispersos ou apenas indiretamente relacionados.\n\n\n\n\n\n\nSoftwares para um Zettelkasten digital\n\n\n\n\nScrivener - processador de texto mais avançado para acadêmicos.\nObsidian - software de anotações popular, com gráfico de relações e sistema de plugins para novas funções e recursos.\nZettlr - software de anotações gratuito e open-source.\nNotion - software de anotações que pode ser utilizado gratuitamente.\nRoam Research\nLogseq\n\n\n\nVeja ainda:\n\nAndy Matuschak’s working notes\nCreate a Zettelkasten for your Notes to Improve Thinking and Writing\nCommunicating with Slip Boxes - An Empirical Account\nZettelkasten — How One German Scholar Was So Freakishly Productive\nThe Zettelkasten Method\nHow to take smart notes review\n\n\nOrganização\nUm repositório de referências e anotações mais interessante para grupos ativos de pesquisa parece ser o Zotero Groups. O Zotero é um software livre, que permite a organização de referências em coleções, a inserção de citações e a formatação automática de referências em documentos. Já o Zotero Groups funciona como uma ferramenta na qual é possível organizar grupos de pesquisa com referências e arquivos compartilhados no qual todos podem visualizar e editar as mesmas referências e arquivos (de acordo com as configurações do grupo), sendo que há a possibilidade de compartilhamento com terceiros via interface online ou utilizando uma API. Há vários outros gerenciadores bibliográficos além do Zotero, mas nenhum possui ferramentas de colaboração semelhantes.\n\n\nAnálise\n\nGephi\nTableau\nRAWGraphs\nFlourish\nDatawrapper\nInfogram\nPalladio\nJuxta\nOpenRefine\nOmeka\nScalar\nAntConc\n\n\n\nSoftwares de análise qualitativa\n\nAtlas.ti\nVoyant Tools\nNVivo\nMAXQDA\nDedoose\nQiqqa\nQuirkos\nRQDA\nTransana\nWeft QDA\nCATMA\nTaguette\nQcoder\nQDA Miner\n\n\n\nMineração de dados\n\nOrange\nRapidMiner\nKNIME\nWeka\nRattle\nR\nPython\nJulia\nScala\nApache Spark\nGoogle Colab\nAnaconda\nJupyter\nJupyterLab\nJupyter Notebook\n\n\n\nIDEs\n\nVisual Studio Code com Github Co-Pilot e Quarto Extension for Visual Studio Code\nRStudio, RStudio Cloud, RStudio Server, RStudio Package Manager"
  },
  {
    "objectID": "md/C/index.html",
    "href": "md/C/index.html",
    "title": "Publicação e divulgação",
    "section": "",
    "text": "Como um computador é capaz de estabelecer a função dos diferentes elementos textuais? Em outras palavras, como ele poderia separar um título e o corpo do texto? Um texto com link e um texto sem link? Como ele poderia saber que uma determinada seção não é parte do texto, mas apenas contém informações sobre ele?\nA resposta para estas questões pode ser encontrada em um recurso conhecido como linguagem de marcação (markup language). Em linha gerais, cada linguagem de marcação funciona como um conjunto de regras para agregar atributos a elementos do texto utilizando etiquetas. Estas etiquetas indicam para um programa que uma parte do texto tem uma determinada função ou que deve ser exibida de tal e tal modo. Nesta seção, veremos alguns exemplos do uso da sintaxe de algumas das linguagens mais conhecidas.\n\n\nUm dado importante que nós leigos costumamos ignorar é que todo texto com estrutura em um computador (sem exceção) usa alguma linguagem de marcação. Programas como o Microsoft Word e outros processadores de texto também costumam utilizar (um tipo próprio de) XML. Quando selecionamos alguma palavra e a transformamos em um título, por exemplo, o programa adiciona as etiquetas ao seu redor sem que nos demos conta.1\n\n\n\nA linguagem HTML é um excelente exemplo de como funciona uma linguagem de marcação convencional, não-minimalista. Ela usa etiquetas pré-definidas para representar uma página, sendo a linguagem utilizadas pelas páginas da internet e pelos e-books (arquivos com extensão .``epub, .mobi e .azw) (cf. W3Schools). Para definir as seções utiliza-se: &lt;``head``&gt;, &lt;body&gt;, &lt;``div``&gt;; para definir elementos: &lt;p&gt;, &lt;``table``&gt;, &lt;``form``&gt;, &lt;``image``&gt; e &lt;a&gt;; para definir a formatação do texto: &lt;h1&gt;, &lt;h2&gt;, &lt;h3&gt; etc., &lt;b&gt; e &lt;i&gt;.\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;body&gt;\n        &lt;h1 id=\"título-de-nível-1\"&gt;Título de nível 1&lt;/h1&gt;\n        &lt;h2 id=\"título-de-nível-2\"&gt;Título de nível 2&lt;/h2&gt;\n        &lt;p&gt;Texto em &lt;em&gt;itálico&lt;/em&gt;, e texto em &lt;strong&gt;negrito&lt;/strong&gt;.&lt;/p&gt;\n        &lt;blockquote&gt;&lt;p&gt;Texto de uma citação em bloco.&lt;/p&gt;&lt;/blockquote&gt;\n        &lt;p&gt;E um &lt;a href=\"www.google.com\"&gt;link&lt;/a&gt;.&lt;/p&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\nTrata-se de um exemplo muito simples de texto em HTML. Exemplos mais complexos podem ser encontrados selecionando um item aleatório de uma página da internet com o clique secundário e selecionando em seguida a opção “Inspecionar Elemento”, disponível na maior parte dos navegadores. A linguagem XML é um desdobramento de HTML e funciona do mesmo modo, com uma diferença significativa: não há etiquetas pré-definidas. É uma linguagem que serve, sobretudo, para guardar dados de uma maneira estruturada.\n\n\n\nMarkdown, em primeiro lugar, é a linguagem mais simples e minimalista disponível hoje. Seu nome é um trocadilho com a expressão markup language (markup ↑ markdown ↓) e arquivos utilizando esta linguagem geralmente levam a extensão .md.2 Ela foi criada em 2004 por John Gruber e Aaron Swartz com o propósito de possibilitar a geração de texto HTML (utilizado em todas as páginas da web) a partir de uma alternativa mais legível e com menos distrações (compare o bloco abaixo em Markdown com o seguinte utilizando HTML).\n# Título de nível 1\n\n## Título de nível 2\n\nTexto em *itálico*, e texto em **negrito**.\n\n&gt; Texto de uma citação em bloco.\n\nE um [link](http://www.google.com).\nO que começou como uma opção bastante simples voltada apenas para a internet, evoluiu ao longo dos últimos 20 anos para se tornar uma linguagem extremamente popular com um bom conjunto de funcionalidades que preenche todos os requisitos para a produção de textos técnicos e acadêmicos (cf. (Krewinkel and Winkler 2017)). Isso foi possível graças ao desenvolvimento do Pandoc, um conversor universal de documentos desenvolvido pelo professor de filosofia J. MacFarlane ((2006)), que torna fácil a produção de arquivos em qualquer formato partindo de um simples arquivo em markdown.3\nPara o humanista digital esta é uma linguagem extremamente relevante por dois motivos: (i.) é um dos meios mais fáceis marcar e estruturar um texto de fonte primária excessivamente longo; (ii.) é um dos meios mais práticos de registrar e manter anotações de pesquisa a longo prazo em um formato agnóstico que pode ser lido por qualquer programa e que não demanda que o usuário trabalhe constantemente utilizando um layout de impressão (preview), como se o texto fosse destinado à impressão imediata.\n\n\n\nÉ interessante mencionar ainda a existência de uma linguagem chamada LaTeX (pronuncia-se latek, e não látex). Trata-se de um sistema de tipografia de alta qualidade, utilizado para preparar livros e artigos para publicação. Nas ciências naturais e na matemática estudantes aprenderem desde cedo a escrever utilizando LaTeX para facilitar o trabalho com equações. Nas ciências humanas dificilmente encontramos a oferta ou a exigência de conhecimentos sobre LaTeX. Ainda sim, conhecer um pouco sobre o sistema pode ser excepcionalmente útil para a preparação de textos para a publicação.4\nO propósito de compartilhar estes exemplos das diferentes linguagens de marcação é auxiliar leitores a se familiarizarem com o conceito, pois aprender a ler e utilizar cada uma delas em detalhe é um processo que demanda tempo e disposição para estudar a documentação com as especificações de cada uma delas. Um recurso que pode auxiliar muito neste processo são os editores de texto, que contam com funções específicas para lidar com a sintaxe das linguagens de marcação, como, por exemplo, (i.) o realce da sintaxe, (ii.) a opção de autocompletar e (iii.) a análise em busca de erros.5\n\n\n\n\n\n\nEstudantes tem acesso gratuito ao Github Pro por meio do Github Education Pack. Para ter acesso, basta criar uma conta no Github e solicitar o pacote utilizando o seu e-mail institucional (@pucminas). Com o Github Pro, é possível utilizar o Github Co-Pilot, um assistente de programação baseado em “inteligência” artificial.6. Além disso, você terá acesso a diversos outros serviços, como o Overleaf, os IDEs do Jet Brains e mais. Veja ainda: GitHub Guides, GitHub Desktop, GitHub Pages\n\n\n\nVeja ainda:\n\nPandoc, Quarto - para converter Markdown em documentos de Word, páginas HTML e arquivos PDF (e vice-versa)\nZenodo - para criar DOIs para publicações digitais\nMicrosoft Word\nLibreOffice\nGoogle Docs\nFigshare\nOpen Science Framework, Open Science Framework Preprints\nCite Tools Quarto Extension at GitHub"
  },
  {
    "objectID": "md/C/index.html#linguagens-de-marcação",
    "href": "md/C/index.html#linguagens-de-marcação",
    "title": "Publicação e divulgação",
    "section": "",
    "text": "Como um computador é capaz de estabelecer a função dos diferentes elementos textuais? Em outras palavras, como ele poderia separar um título e o corpo do texto? Um texto com link e um texto sem link? Como ele poderia saber que uma determinada seção não é parte do texto, mas apenas contém informações sobre ele?\nA resposta para estas questões pode ser encontrada em um recurso conhecido como linguagem de marcação (markup language). Em linha gerais, cada linguagem de marcação funciona como um conjunto de regras para agregar atributos a elementos do texto utilizando etiquetas. Estas etiquetas indicam para um programa que uma parte do texto tem uma determinada função ou que deve ser exibida de tal e tal modo. Nesta seção, veremos alguns exemplos do uso da sintaxe de algumas das linguagens mais conhecidas.\n\n\nUm dado importante que nós leigos costumamos ignorar é que todo texto com estrutura em um computador (sem exceção) usa alguma linguagem de marcação. Programas como o Microsoft Word e outros processadores de texto também costumam utilizar (um tipo próprio de) XML. Quando selecionamos alguma palavra e a transformamos em um título, por exemplo, o programa adiciona as etiquetas ao seu redor sem que nos demos conta.1\n\n\n\nA linguagem HTML é um excelente exemplo de como funciona uma linguagem de marcação convencional, não-minimalista. Ela usa etiquetas pré-definidas para representar uma página, sendo a linguagem utilizadas pelas páginas da internet e pelos e-books (arquivos com extensão .``epub, .mobi e .azw) (cf. W3Schools). Para definir as seções utiliza-se: &lt;``head``&gt;, &lt;body&gt;, &lt;``div``&gt;; para definir elementos: &lt;p&gt;, &lt;``table``&gt;, &lt;``form``&gt;, &lt;``image``&gt; e &lt;a&gt;; para definir a formatação do texto: &lt;h1&gt;, &lt;h2&gt;, &lt;h3&gt; etc., &lt;b&gt; e &lt;i&gt;.\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;body&gt;\n        &lt;h1 id=\"título-de-nível-1\"&gt;Título de nível 1&lt;/h1&gt;\n        &lt;h2 id=\"título-de-nível-2\"&gt;Título de nível 2&lt;/h2&gt;\n        &lt;p&gt;Texto em &lt;em&gt;itálico&lt;/em&gt;, e texto em &lt;strong&gt;negrito&lt;/strong&gt;.&lt;/p&gt;\n        &lt;blockquote&gt;&lt;p&gt;Texto de uma citação em bloco.&lt;/p&gt;&lt;/blockquote&gt;\n        &lt;p&gt;E um &lt;a href=\"www.google.com\"&gt;link&lt;/a&gt;.&lt;/p&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\nTrata-se de um exemplo muito simples de texto em HTML. Exemplos mais complexos podem ser encontrados selecionando um item aleatório de uma página da internet com o clique secundário e selecionando em seguida a opção “Inspecionar Elemento”, disponível na maior parte dos navegadores. A linguagem XML é um desdobramento de HTML e funciona do mesmo modo, com uma diferença significativa: não há etiquetas pré-definidas. É uma linguagem que serve, sobretudo, para guardar dados de uma maneira estruturada.\n\n\n\nMarkdown, em primeiro lugar, é a linguagem mais simples e minimalista disponível hoje. Seu nome é um trocadilho com a expressão markup language (markup ↑ markdown ↓) e arquivos utilizando esta linguagem geralmente levam a extensão .md.2 Ela foi criada em 2004 por John Gruber e Aaron Swartz com o propósito de possibilitar a geração de texto HTML (utilizado em todas as páginas da web) a partir de uma alternativa mais legível e com menos distrações (compare o bloco abaixo em Markdown com o seguinte utilizando HTML).\n# Título de nível 1\n\n## Título de nível 2\n\nTexto em *itálico*, e texto em **negrito**.\n\n&gt; Texto de uma citação em bloco.\n\nE um [link](http://www.google.com).\nO que começou como uma opção bastante simples voltada apenas para a internet, evoluiu ao longo dos últimos 20 anos para se tornar uma linguagem extremamente popular com um bom conjunto de funcionalidades que preenche todos os requisitos para a produção de textos técnicos e acadêmicos (cf. (Krewinkel and Winkler 2017)). Isso foi possível graças ao desenvolvimento do Pandoc, um conversor universal de documentos desenvolvido pelo professor de filosofia J. MacFarlane ((2006)), que torna fácil a produção de arquivos em qualquer formato partindo de um simples arquivo em markdown.3\nPara o humanista digital esta é uma linguagem extremamente relevante por dois motivos: (i.) é um dos meios mais fáceis marcar e estruturar um texto de fonte primária excessivamente longo; (ii.) é um dos meios mais práticos de registrar e manter anotações de pesquisa a longo prazo em um formato agnóstico que pode ser lido por qualquer programa e que não demanda que o usuário trabalhe constantemente utilizando um layout de impressão (preview), como se o texto fosse destinado à impressão imediata.\n\n\n\nÉ interessante mencionar ainda a existência de uma linguagem chamada LaTeX (pronuncia-se latek, e não látex). Trata-se de um sistema de tipografia de alta qualidade, utilizado para preparar livros e artigos para publicação. Nas ciências naturais e na matemática estudantes aprenderem desde cedo a escrever utilizando LaTeX para facilitar o trabalho com equações. Nas ciências humanas dificilmente encontramos a oferta ou a exigência de conhecimentos sobre LaTeX. Ainda sim, conhecer um pouco sobre o sistema pode ser excepcionalmente útil para a preparação de textos para a publicação.4\nO propósito de compartilhar estes exemplos das diferentes linguagens de marcação é auxiliar leitores a se familiarizarem com o conceito, pois aprender a ler e utilizar cada uma delas em detalhe é um processo que demanda tempo e disposição para estudar a documentação com as especificações de cada uma delas. Um recurso que pode auxiliar muito neste processo são os editores de texto, que contam com funções específicas para lidar com a sintaxe das linguagens de marcação, como, por exemplo, (i.) o realce da sintaxe, (ii.) a opção de autocompletar e (iii.) a análise em busca de erros.5\n\n\n\n\n\n\nEstudantes tem acesso gratuito ao Github Pro por meio do Github Education Pack. Para ter acesso, basta criar uma conta no Github e solicitar o pacote utilizando o seu e-mail institucional (@pucminas). Com o Github Pro, é possível utilizar o Github Co-Pilot, um assistente de programação baseado em “inteligência” artificial.6. Além disso, você terá acesso a diversos outros serviços, como o Overleaf, os IDEs do Jet Brains e mais. Veja ainda: GitHub Guides, GitHub Desktop, GitHub Pages\n\n\n\nVeja ainda:\n\nPandoc, Quarto - para converter Markdown em documentos de Word, páginas HTML e arquivos PDF (e vice-versa)\nZenodo - para criar DOIs para publicações digitais\nMicrosoft Word\nLibreOffice\nGoogle Docs\nFigshare\nOpen Science Framework, Open Science Framework Preprints\nCite Tools Quarto Extension at GitHub"
  },
  {
    "objectID": "md/C/index.html#footnotes",
    "href": "md/C/index.html#footnotes",
    "title": "Publicação e divulgação",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nNão há nenhum problema nesse procedimento, mas ao utilizar o formato docx, por exemplo, é importante ter consciência de que estamos armazenando nossas anotações em uma linguagem que apenas um programa específico de uma empresa privada consegue interpretar e exibir.↩︎\nA rigor, não há nada que obrigue o uso de uma extensão específica em arquivos de qualquer uma das linguagens apresentadas aqui. Todos contêm apenas texto plano e poderiam ser modificados para utilizar a extensão .txt sem qualquer prejuízo ou perda de dados. A extensão é apenas um modo de indicar a sintaxe utilizada para o programa que irá abrir o arquivo.↩︎\n“Because pandoc’s intermediate representation of a document is less expressive than many of the formats it converts between, one should not expect perfect conversions between every format and every other. Pandoc attempts to preserve the structural elements of a document, but not formatting details such as margin size. And some document elements, such as complex tables, may not fit into pandoc’s simple document model. While conversions from pandoc’s Markdown to all formats aspire to be perfect, conversions from formats more expressive than pandoc’s Markdown can be expected to be lossy.” (MacFarlane 2006) (ênfase nossa). Utilizando o Pandoc, é possível transformar um texto em Markdown em praticamente qualquer outro formato existente, de um eBook a um livro acabado, passando por documentos em rtf, latex, docx ou html. É mais fácil obter um produto com alta qualidade tipográfica utilizando Markdown + Pandoc do que qualquer outro processador de texto, como o Word (este texto, inclusive, foi redigido utilizando markdown).↩︎\nPara a preparação de minha própria tese, criei um modelo que facilita a conversão de documentos do formato Markdown para LaTeX (cf. github.com/bcdavasconcelos/ABNTeX-o-matic).↩︎\nTendo em vista que a maior parte dos editores de texto compartilha de um núcleo comum de funções, como integração com o sistema git de versões e acesso integrado ao terminal/shell, a questão de qual programa utilizar é, em grande medida, uma questão de preço, preferências pessoais e de compatibilidade. Opções para Windows e Linux incluem Visual Studio Code e Atom; opções para macOS incluem, além destas três últimas, Nova, TextMate e BBEdit. Eventualmente algumas tarefas serão mais fáceis de executar em um programa do que em outro, mas, em última instância, todos são bem equipados e capazes de realizar as tarefas mais importantes.↩︎\nO Co-Pilot pode ser utilizado como uma extensão em um IDE (Integrated Development Environment). Primeiro, baixe o Visual Studio Code; em seguida, instale a extensão do Co-Pilot. Por fim, faça login no Github Co-Pilot no VS Code.↩︎"
  },
  {
    "objectID": "md/intro/index.html",
    "href": "md/intro/index.html",
    "title": "O mundo das humanidades digitais",
    "section": "",
    "text": "As humanidades digitais são um campo de pesquisa interdisciplinar que se desenvolveu a partir da década de 1990, com o advento da internet e a popularização dos computadores pessoais. Dentre as subáreas das humanidades digitais, que nascem da convergência entre as humanidades e as tecnologias digitais, temos as RI Digitais, a Antropologia Digital, a Ciência Política Digital, entre outras.\ngraph TD\n    A(Humanidades Digitais) --&gt; B(Ciências Sociais Digitais)\n    A --&gt; C(Antropologia Digital)\n    B --&gt; C(RI Digitais)\n    A --&gt; D(Arqueologia Digital)\n    A --&gt; E(Ciência Política Digital)\n    A --&gt; F(História Digital)\nCada uma destas áreas possui suas particularidades, mas todas elas compartilham um conjunto de ferramentas e métodos de pesquisa que podem ser úteis para pesquisadores de qualquer área das humanidades. Neste curso, vamos explorar algumas destas ferramentas e métodos, com foco nas RI Digitais."
  },
  {
    "objectID": "md/intro/index.html#ri-digitais",
    "href": "md/intro/index.html#ri-digitais",
    "title": "O mundo das humanidades digitais",
    "section": "RI Digitais",
    "text": "RI Digitais\nUm projeto de pesquisa em Relações Internacionais pode ser digital em múltiplos sentidos. Pode ser digital porque diz respeito a uma tecnologia digital, porque usa métodos digitais, porque visa um produto digital, ou porque usa uma combinação destes três elementos.\n\n\n\nDigitalObjetoDiplomacia DigitalSegurança nacional noCyberespaçoMudança tecnológica e pol. internacionalEscopoProdução de um banco dedadosPublicacão de períodicoscientíficos onlineDivulção de conhecimentovia redes sociaisMétodoProcessamento deLinguagem NaturalRaspagem de dadosAnálise de redes sociais\n\n\n\n\n\n\n\nVocê sabia?\n\n\n\nA PUC é uma pioneira na área da programação. Em 1993, o departamento de informática da PUC-Rio desenvolveu Lua, uma linguagem de programação leve, projetada para ser embutida em softwares maiores, que se tornou extremamente popular. Ela é amplamente utilizada por outros programas de código aberto como Quarto e Pandoc e foi utilizada para gerar esta página que você lê agora."
  }
]